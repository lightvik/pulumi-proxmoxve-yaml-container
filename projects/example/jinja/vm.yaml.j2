{%- from 'macros/vm.j2' import macro_vm as macro_vm %}
{%- from 'vars/provider.j2' import name as provider_name %}
{%- import 'vars/vm.j2' as virtual_machines %}
{%- import 'vars/network.j2' as network %}


{# template virtual machine #}
{{ macro_vm(provider_name, {
    'name': 'template' ~ '.' ~ network['domain'],
    'custom_options': virtual_machines['custom_options']['template'] | default({}),
    'default_options': virtual_machines['default_options'],
    'custom_properties': virtual_machines['custom_properties']['template'],
    'default_properties': virtual_machines['default_properties'],
    'vmId': virtual_machines['settings']['template_vm_id']
}) }}
{# /// #}

{# virtual machines #}
{%- if env("TEMPLATE_VM_IS_NOT_READY", default='false') != 'true' %}
  {%- set ns = namespace(loop_vmId=virtual_machines['settings']['vm_id_start']) %}
  {%- for name in virtual_machines['custom_properties'].keys() if name != 'template' %}
    {%- set ns.loop_vmId = ns.loop_vmId + 1 if virtual_machines['custom_properties'][name]['vmId'] is not defined else ns.loop_vmId %}
    {%- set vm = {
      'name': name ~ '.' ~ network['domain'],
      'custom_options': virtual_machines['custom_options'][name] | default({}),
      'default_options': virtual_machines['default_options'],
      'custom_properties': virtual_machines['custom_properties'][name] | default({}),
      'default_properties': virtual_machines['default_properties'],
      'vmId': virtual_machines['custom_properties'][name]['vmId'] | default(ns.loop_vmId)
    } %}
{{ macro_vm(provider_name, vm) }}
  {%- endfor %}
{%- endif %}
{# /// #}